class Solution:
    def isRobotBounded(self, instructions: str) -> bool:

        dirs = {'N':(0,1),'E':(1,0),'S':(0,-1),'W':(-1,0)}
        turnings = {'N':('W','E'),'W':('S','N'),'E':('N','S'),'S':('E','W')}

        
        def getOneLoop(x,y,state):
            for dr in instructions:
                if dr == 'G':
                    new_x,new_y = dirs[state]
                    x += new_x 
                    y += new_y
                elif dr == 'L':
                    state = turnings[state][0]
                else:
                    state = turnings[state][1]
            return x,y,state

        x,y,dxn = 0,0,'N'
        for _ in range(4):
            x,y,dxn = getOneLoop(x,y,dxn)
            if (x,y) == (0,0):
                return True
            

        if (x,y) == (0,0):
            return True
        return False

        

        return False
        
